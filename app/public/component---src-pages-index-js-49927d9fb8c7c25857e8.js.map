{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/projects/projects.css.js","webpack:///./src/components/projects/projects.js"],"names":["Index","data","className","to","Container","styled","div","ProjectsGrid","items","useStaticQuery","projectsJson","projects","map","item","i","title","date","desc","image","link","bgColor","color","key","id","src","alt"],"mappings":"2FAAA,oEAmDeA,UA7CD,SAAC,GAAD,EAAGC,KAAH,OACZ,kBAAC,IAAD,KACE,yBAAKC,UAAU,iBACb,8CACc,0BAAMA,UAAU,UAAhB,SAEd,6BACA,yBAAKA,UAAU,aACb,uBAAGA,UAAU,aAAb,gBAEE,4BAAQA,UAAU,iBAAlB,cAFF,wDAIE,4BAAQA,UAAU,iBAAlB,WAJF,gFAME,uBAAGA,UAAU,IAAb,qBAEF,uBAAGA,UAAU,gBACX,kBAAC,IAAD,CAAMC,GAAG,UAAT,6CAC6C,qDAcnD,6BAIE,kBAAC,IAAD,U,yECxCOC,E,UAAYC,EAAOC,IAAV,2vF,YC8DPC,IA5DM,SAAC,GAAc,EAAZC,MAAa,IAC7BP,EAAOQ,YAAe,cAgB5B,OAAQ,kBAACL,EAAD,KAENH,EAAKS,aAAaC,SAASC,KAAI,SAACC,EAAMC,GACpC,IACEC,EAOEF,EAPFE,MACAC,EAMEH,EANFG,KACAC,EAKEJ,EALFI,KACAC,EAIEL,EAJFK,MACAC,EAGEN,EAHFM,KAGEN,EAFFO,QAEEP,EADFQ,MAEF,OAAQ,kBAAC,IAAD,CAAMnB,UAAU,eAAeoB,IAAKR,EAAGX,GAAE,aAAegB,GAC9D,yBAAKI,GAAG,mBAAmBrB,UAAU,2BACnC,yBAAKA,UAAU,iBACb,yBAAKsB,IAAKN,EAAOO,IAAKV,KAExB,yBAAKb,UAAU,gBACb,4BAAKa,GACL,uBAAGb,UAAU,gBAAgBe,GAC7B,uBAAGf,UAAU,gBAAgBc","file":"component---src-pages-index-js-49927d9fb8c7c25857e8.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Layout from 'components/layout';\nimport Projects from 'components/projects';\nimport { graphql, Link } from 'gatsby';\n\nconst Index = ({ data }) => (\n  <Layout>\n    <div className=\"intro-wrapper\">\n      <div>\n        Hi, {`I'm`} <span className=\"strong\">Edu.</span>\n      </div>\n      <br />\n      <div className=\"intro-box\">\n        <p className=\"me-into-p\">\n          {`I understand `}\n          <strong className=\"double-strong\"> problems </strong>\n          {`people face and also the people who have the power to`}\n          <strong className=\"double-strong\"> solve </strong>\n          {`them. When they donâ€™t sync well I try to communicate, guide and negotiate to `}\n          <i className=\"\">bridge the gaps.</i>\n        </p>\n        <p className=\"intro-footer\">\n          <Link to=\"/about\">\n            {`If everything's fine, you can find me `} <i>racing motorcycles</i>\n          </Link>\n        </p>\n        {/*<Modal>\n          <video\n            src=\"https://i.imgur.com/gzFqNSW.mp4\"\n            playsInline\n            loop\n            autoPlay\n            muted\n          />\n        </Modal>*/}\n      </div>\n    </div>\n    <div>\n      {/*<div style={{ height: '50vh' }} />\n      <IOExample />\n    <Gallery items={data.homeJson.gallery} />*/}\n      <Projects/>\n    </div>\n  </Layout>\n);\n\nIndex.propTypes = {\n  data: PropTypes.object.isRequired,\n};\n\nexport default Index;\n\nexport const query = graphql`\n  query HomepageQuery {\n    homeJson {\n      title\n      content {\n        childMarkdownRemark {\n          html\n          rawMarkdownBody\n        }\n      }\n    }\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n        display: grid;\n        grid-template-columns: 450px 450px;\n        grid-gap: 40px;\n        width:920px;\n        margin:0 auto 120px auto;\n        .project-item {\n                border-radius: 20px 20px 20px 20px;\n                overflow: hidden;\n                display:block;\n                position:relative;\n                height: 700px;\n                overflow: hidden;\n        }\n        .project-left {\n                padding: 0px 60px;\n                width: 100%;\n                font-weight: 600;\n                position:absolute;\n                top:400px;\n                left:0px;\n                z-index:3;\n                h1 {\n                        font-size: 30px;\n                        font-weight: 600;\n                    }\n        }\n        .projecy-image {\n                width: 100%;\n                overflow: hidden;\n                img {\n                        display: block;\n                        max-width: 100%;\n                }\n        }\n        .project-desc {\n                margin-top: 24px;\n                opacity: .8;\n                line-height: 25px;\n                font-size: 15px;\n        }\n        .project-date {\n                opacity: .8;\n                font-style: italic;\n        }\n        .project-link {\n                text-decoration:none;\n                transition: opacity .3s ease;\n        }\n\n        @media only screen and (max-width: 1000px) {\n                border-radius: 20px;\n                padding: 0px 24px;\n                width:100%;\n                display:block;\n                .project-item {\n                        padding: 24px;\n                        display: block;\n                        align-items: center;\n                        width:100%;\n                        height:auto;\n                        margin-bottom:40px;\n                }\n                .project-left {\n                        padding: 0px 12px;\n                        width: 100%;\n                        position:relative;\n                        bottom:0px;\n                        position:static;\n                        h1 {\n                                font-size: 26px;\n                                font-weight: 600;\n                            }\n                }\n                .project-desc {\n                        margin-top: 15px;\n                        opacity: .8;\n                        line-height: 20px;\n                        font-size: 15px;\n                        margin-bottom: 15px;\n                }\n                .projecy-image {\n                        width: 100%;\n                        border-radius:20px;\n                        height:220px;\n                    }\n        }\n`;\n","import React from 'react';\nimport { Container } from './projects.css';\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\n\nconst ProjectsGrid = ({ items }) => {\n  const data = useStaticQuery(graphql`\n    query ProjectsQuery {\n      projectsJson {\n        projects {\n          title\n          desc\n          date\n          image\n          link\n          id\n          bgColor\n          color\n        }\n      }\n    }\n  `)\n  return (<Container>\n  {\n    data.projectsJson.projects.map((item, i) => {\n      const {\n        title,\n        date,\n        desc,\n        image,\n        link,\n        bgColor,\n        color\n      } = item;\n      return (<Link className=\"project-link\" key={i} to={`/projects/${link}`}>\n        <div id=\"projectContainer\" className=\"img-shadow project-item\">\n          <div className=\"projecy-image\">\n            <img src={image} alt={title} />\n          </div>\n          <div className=\"project-left\">\n            <h1>{title}</h1>\n            <p className=\"project-desc\">{desc}</p>\n            <p className=\"project-date\">{date}</p>\n          </div>\n        </div>\n      </Link>)\n    })\n  }\n  {\n    /*\n    <Link className=\"project-link\" to={`/about`}>\n        <div id=\"projectContainer\" className=\"img-shadow project-item\">\n          <div className=\"projecy-image\">\n          </div>\n          <div className=\"project-left\">\n            <h1>Like what you see?</h1>\n            <p className=\"project-desc\">Know more about me</p>\n          </div>\n        </div>\n    </Link>\n    */\n  }\n  </Container>)\n};\n\nexport default ProjectsGrid;\n"],"sourceRoot":""}